{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bahdana/Desktop/test-taskFINAL/my-app/src/nodeComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\n\nfunction NodeComponent(props) {\n  _s();\n\n  const [state, setState] = useState(true);\n\n  function onToggle(e) {\n    if (state == true) {\n      setState(false);\n    } else setState(true);\n  }\n\n  const dataModel = props.dataModel;\n\n  if (state == true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"nodeName\",\n            onClick: onToggle,\n            children: [\"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"glyphicon glyphicon-chevron-down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 66\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"iconify\",\n              \"data-icon\": \"ph:cube-light\",\n              \"data-inline\": \"false\",\n              \"data-width\": \"5px\",\n              \"data-height\": \"5px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 125\n            }, this), \" \", dataModel.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nodeChildren\",\n          children: [\"  \", dataModel.children.map(child => /*#__PURE__*/_jsxDEV(NodeComponent, {\n            dataModel: child\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"nodeName\",\n          onClick: onToggle,\n          children: [\"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"glyphicon glyphicon-chevron-down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 63\n          }, this), \" \", dataModel.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_s(NodeComponent, \"VvKXSPDp4yRj5VI1Ef/r5LoZ51I=\");\n\n_c = NodeComponent;\nexport default NodeComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"NodeComponent\");","map":{"version":3,"sources":["/Users/bahdana/Desktop/test-taskFINAL/my-app/src/nodeComponent.js"],"names":["React","useState","NodeComponent","props","state","setState","onToggle","e","dataModel","name","children","map","child"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;;AAEA,WAASK,QAAT,CAAkBC,CAAlB,EAAqB;AAEjB,QAAIH,KAAK,IAAI,IAAb,EAAmB;AACfC,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,KAFD,MAEOA,QAAQ,CAAC,IAAD,CAAR;AACV;;AAED,QAAMG,SAAS,GAAGL,KAAK,CAACK,SAAxB;;AACA,MAAIJ,KAAK,IAAI,IAAb,EAAmB;AACf,wBAAO;AAAA,6BACH;AAAA,gCACG;AAAA,iCAAI;AAAI,YAAA,SAAS,EAAC,UAAd;AAAyB,YAAA,OAAO,EAAEE,QAAlC;AAAA,0CAA8C;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAA9C,oBAAyG;AAAM,cAAA,SAAS,EAAC,SAAhB;AAA0B,2BAAU,eAApC;AAAoD,6BAAY,OAAhE;AAAwE,4BAAW,KAAnF;AAAyF,6BAAY;AAArG;AAAA;AAAA;AAAA;AAAA,oBAAzG,OAA6NE,SAAS,CAACC,IAAvO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADH,eAEI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,2BAAiCD,SAAS,CAACE,QAAV,CAAmBC,GAAnB,CAAwBC,KAAD,iBACpD,QAAC,aAAD;AAAe,YAAA,SAAS,EAAEA;AAA1B;AAAA;AAAA;AAAA;AAAA,kBAD6B,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAQH,GATD,MAUK;AACD,wBAAO;AAAA,6BACH;AAAA,+BAAI;AAAI,UAAA,SAAS,EAAC,UAAd;AAAyB,UAAA,OAAO,EAAEN,QAAlC;AAAA,wCAA8C;AAAM,YAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,kBAA9C,OAA0GE,SAAS,CAACC,IAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH;AACJ;;GA1BQP,a;;KAAAA,a;AA4BT,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\n\nfunction NodeComponent(props) {\n    const [state, setState] = useState(true);\n    \n    function onToggle(e) {\n\n        if (state == true) {\n            setState(false)\n        } else setState(true)\n    }\n\n    const dataModel = props.dataModel;\n    if (state == true) {\n        return <div>\n            <div>\n               <li><h2 className=\"nodeName\" onClick={onToggle}>  <span className=\"glyphicon glyphicon-chevron-down\"></span> <span className=\"iconify\" data-icon=\"ph:cube-light\" data-inline=\"false\" data-width=\"5px\" data-height=\"5px\"></span> {dataModel.name}</h2></li>\n                <div className=\"nodeChildren\">  {dataModel.children.map((child) =>\n                    <NodeComponent dataModel={child} />)}\n                </div>\n            </div>\n        </div>\n    }\n    else {\n        return <div>\n            <li><h2 className=\"nodeName\" onClick={onToggle}>  <span className=\"glyphicon glyphicon-chevron-down\"></span> {dataModel.name}</h2></li>\n        </div>\n    }\n}\n\nexport default NodeComponent;"]},"metadata":{},"sourceType":"module"}