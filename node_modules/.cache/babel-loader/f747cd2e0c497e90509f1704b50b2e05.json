{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bahdana/Desktop/react_dec/my-app/src/components/Tree.js\";\nimport React, { Component } from 'react';\nimport { Treebeard } from 'react-treebeard';\nconst data = {\n  name: 'root',\n  toggled: true,\n  children: [{\n    name: 'parent',\n    children: [{\n      name: 'child1'\n    }, {\n      name: 'child2'\n    }]\n  }, {\n    name: 'loading parent',\n    loading: true,\n    children: []\n  }, {\n    name: 'parent',\n    children: [{\n      name: 'nested parent',\n      children: [{\n        name: 'nested child 1'\n      }, {\n        name: 'nested child 2'\n      }]\n    }]\n  }]\n};\n\nclass Tree extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data\n    };\n    this.onToggle = this.onToggle.bind(this);\n  }\n\n  onToggle(node, toggled) {\n    const {\n      cursor,\n      data\n    } = this.state;\n\n    if (cursor) {\n      this.setState(() => ({\n        cursor,\n        active: false\n      }));\n    }\n\n    node.active = true;\n\n    if (node.children) {\n      node.toggled = toggled;\n    }\n\n    this.setState(() => ({\n      cursor: node,\n      data: Object.assign({}, data)\n    }));\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Treebeard, {\n      data: data,\n      onToggle: this.onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Tree;","map":{"version":3,"sources":["/Users/bahdana/Desktop/react_dec/my-app/src/components/Tree.js"],"names":["React","Component","Treebeard","data","name","toggled","children","loading","Tree","PureComponent","constructor","props","state","onToggle","bind","node","cursor","setState","active","Object","assign","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAE,MADG;AAETC,EAAAA,OAAO,EAAE,IAFA;AAGTC,EAAAA,QAAQ,EAAE,CACN;AACIF,IAAAA,IAAI,EAAE,QADV;AAEIE,IAAAA,QAAQ,EAAE,CACN;AAAEF,MAAAA,IAAI,EAAE;AAAR,KADM,EAEN;AAAEA,MAAAA,IAAI,EAAE;AAAR,KAFM;AAFd,GADM,EAQN;AACIA,IAAAA,IAAI,EAAE,gBADV;AAEIG,IAAAA,OAAO,EAAE,IAFb;AAGID,IAAAA,QAAQ,EAAE;AAHd,GARM,EAaN;AACIF,IAAAA,IAAI,EAAE,QADV;AAEIE,IAAAA,QAAQ,EAAE,CACN;AACIF,MAAAA,IAAI,EAAE,eADV;AAEIE,MAAAA,QAAQ,EAAE,CACN;AAAEF,QAAAA,IAAI,EAAE;AAAR,OADM,EAEN;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFM;AAFd,KADM;AAFd,GAbM;AAHD,CAAb;;AA+BA,MAAMI,IAAN,SAAmBC,aAAnB,CAAiC;AAC7BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACT,MAAAA;AAAD,KAAb;AACA,SAAKU,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDD,EAAAA,QAAQ,CAACE,IAAD,EAAOV,OAAP,EAAe;AACnB,UAAM;AAACW,MAAAA,MAAD;AAASb,MAAAA;AAAT,QAAiB,KAAKS,KAA5B;;AACA,QAAII,MAAJ,EAAY;AACR,WAAKC,QAAL,CAAc,OAAO;AAACD,QAAAA,MAAD;AAASE,QAAAA,MAAM,EAAE;AAAjB,OAAP,CAAd;AACH;;AACDH,IAAAA,IAAI,CAACG,MAAL,GAAc,IAAd;;AACA,QAAIH,IAAI,CAACT,QAAT,EAAmB;AACfS,MAAAA,IAAI,CAACV,OAAL,GAAeA,OAAf;AACH;;AACD,SAAKY,QAAL,CAAc,OAAO;AAACD,MAAAA,MAAM,EAAED,IAAT;AAAeZ,MAAAA,IAAI,EAAEgB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBjB,IAAlB;AAArB,KAAP,CAAd;AACH;;AAEDkB,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAClB,MAAAA;AAAD,QAAS,KAAKS,KAApB;AACA,wBACI,QAAC,SAAD;AACI,MAAA,IAAI,EAAET,IADV;AAEI,MAAA,QAAQ,EAAE,KAAKU;AAFnB;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA3B4B;;AA6BjC,eAAeL,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Treebeard} from 'react-treebeard';\n\nconst data = {\n    name: 'root',\n    toggled: true,\n    children: [\n        {\n            name: 'parent',\n            children: [\n                { name: 'child1' },\n                { name: 'child2' }\n            ]\n        },\n        {\n            name: 'loading parent',\n            loading: true,\n            children: []\n        },\n        {\n            name: 'parent',\n            children: [\n                {\n                    name: 'nested parent',\n                    children: [\n                        { name: 'nested child 1' },\n                        { name: 'nested child 2' }\n                    ]\n                }\n            ]\n        }\n    ]\n};\n\nclass Tree extends PureComponent {\n    constructor(props){\n        super(props);\n        this.state = {data};\n        this.onToggle = this.onToggle.bind(this);\n    }\n    \n    onToggle(node, toggled){\n        const {cursor, data} = this.state;\n        if (cursor) {\n            this.setState(() => ({cursor, active: false}));\n        }\n        node.active = true;\n        if (node.children) { \n            node.toggled = toggled; \n        }\n        this.setState(() => ({cursor: node, data: Object.assign({}, data)}));\n    }\n    \n    render(){\n        const {data} = this.state;\n        return (\n            <Treebeard\n                data={data}\n                onToggle={this.onToggle}\n            />\n        );\n    }\n}\nexport default Tree"]},"metadata":{},"sourceType":"module"}