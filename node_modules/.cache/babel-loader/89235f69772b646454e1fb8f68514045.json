{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bahdana/Desktop/test-taskFINAL/my-app/src/nodeComponent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\n\nfunction NodeComponent(props) {\n  _s();\n\n  const [state, setState] = useState(true);\n\n  function onToggle(e) {\n    if (state == true) {\n      setState(false);\n    } else setState(true);\n  }\n\n  const dataModel = props.dataModel;\n\n  if (state == true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"nodeName\",\n            onClick: onToggle,\n            children: [\"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"glyphicon glyphicon-chevron-down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 61\n            }, this), \" \", dataModel.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nodeChildren\",\n          children: [\"  \", dataModel.children.map(child => /*#__PURE__*/_jsxDEV(NodeComponent, {\n            dataModel: child\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }, this);\n  } else return;\n}\n\n_s(NodeComponent, \"VvKXSPDp4yRj5VI1Ef/r5LoZ51I=\");\n\n_c = NodeComponent;\nexport default NodeComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"NodeComponent\");","map":{"version":3,"sources":["/Users/bahdana/Desktop/test-taskFINAL/my-app/src/nodeComponent.js"],"names":["React","NodeComponent","props","state","setState","useState","onToggle","e","dataModel","name","children","map","child"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,IAAD,CAAlC;;AACA,WAASC,QAAT,CAAmBC,CAAnB,EAAsB;AAElB,QAAIJ,KAAK,IAAG,IAAZ,EAAkB;AACdC,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,KAFD,MAEOA,QAAQ,CAAC,IAAD,CAAR;AACR;;AAEP,QAAMI,SAAS,GAAGN,KAAK,CAACM,SAAxB;;AACA,MAAIL,KAAK,IAAG,IAAZ,EAAkB;AAChB,wBAAO;AAAA,6BACH;AAAA,gCACI;AAAA,iCAAI;AAAI,YAAA,SAAS,EAAC,UAAd;AAAyB,YAAA,OAAO,EAAEG,QAAlC;AAAA,0CAA8C;AAAM,cAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,oBAA9C,OAA0GE,SAAS,CAACC,IAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEG;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,2BAAiCD,SAAS,CAACE,QAAV,CAAmBC,GAAnB,CAAwBC,KAAD,iBACzD,QAAC,aAAD;AAAe,YAAA,SAAS,EAAEA;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADkC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAOe,GARjB,MASc;AAEb;;GArBQX,a;;KAAAA,a;AAuBT,eAAeA,aAAf","sourcesContent":["import React from 'react';\n\n\n\nfunction NodeComponent(props) { \n    const [state, setState] = useState(true);\n    function onToggle (e) {\n \n        if (state== true) {\n            setState(false)\n        } else setState(true)\n      }\n\nconst dataModel = props.dataModel;\nif (state== true) {\n  return <div>\n      <div>\n          <li><h2 className=\"nodeName\" onClick={onToggle}>  <span className=\"glyphicon glyphicon-chevron-down\"></span> {dataModel.name}</h2></li>\n         <div className=\"nodeChildren\">  {dataModel.children.map((child) =>\n        <NodeComponent dataModel={child} />)}\n           </div> \n      </div>\n         </div> } \n         else return \n         \n}\n\nexport default NodeComponent;"]},"metadata":{},"sourceType":"module"}