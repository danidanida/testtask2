{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bahdana/Desktop/test-taskFINAL/my-app/src/app.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //import NodeComponent from './nodeComponent'\n\nconst App = () => {\n  _s();\n\n  const [state, setState] = useState([]); // const modifiedData = [];\n\n  useEffect(async () => {\n    const response = await fetch(\"/api/regions\");\n    const data = await response.json();\n    console.log(data); //console.log(data[3].path)\n    //state = data\n\n    setState(data);\n  }, []);\n  return (\n    /*#__PURE__*/\n\n    /*\n        <div>\n    \n    {state.map =  function myFunction(d) {\n     return <h2>d.name</h2> \n    } }\n        </div>  */\n\n    /* \n     <div>\n         {state.map( d => <NodeComponent dataModel = {d} /> )}\n     </div>   */\n    _jsxDEV(\"div\", {\n      children: state.map(function (d) {\n        d.path = d.path.split(\".\"); //  console.log(d.path) works \n\n        if (d.path.length === 1) {\n          newArray.push({\n            name: el.name,\n            children: []\n          });\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" \", d.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 49\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(App, \"7zZJjGiSRppMnnlYfwuyXOUEkjY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bahdana/Desktop/test-taskFINAL/my-app/src/app.js"],"names":["React","useState","useEffect","App","state","setState","response","fetch","data","json","console","log","map","d","path","split","length","newArray","push","name","el","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC,C,CACA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC,CADc,CAEf;;AACEC,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAHkB,CAIlB;AACA;;AACAH,IAAAA,QAAQ,CAACG,IAAD,CAAR;AAEJ,GARS,EAQP,EARO,CAAT;AAUD;AAAA;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AAEQ;AAAA,gBACKJ,KAAK,CAACQ,GAAN,CAAU,UAASC,CAAT,EAAY;AACfA,QAAAA,CAAC,CAACC,IAAF,GAASD,CAAC,CAACC,IAAF,CAAOC,KAAP,CAAa,GAAb,CAAT,CADe,CAErB;;AACA,YAAIF,CAAC,CAACC,IAAF,CAAOE,MAAP,KAAkB,CAAtB,EAAyB;AACvBC,UAAAA,QAAQ,CAACC,IAAT,CAAc;AAACC,YAAAA,IAAI,EAAEC,EAAE,CAACD,IAAV;AAAgBE,YAAAA,QAAQ,EAAE;AAA1B,WAAd;AACD;;AACC,4BAAO;AAAA,kCAAK;AAAA,4BAAMR,CAAC,CAACM,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL,oBAAyB;AAAA;AAAA;AAAA;AAAA,kBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEC,OARJ;AADL;AAAA;AAAA;AAAA;AAAA;AAdJ;AA2BH,CAxCD;;GAAMhB,G;;KAAAA,G;AA0CN,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n//import NodeComponent from './nodeComponent'\n\nconst App = () => {\n    const [state, setState] = useState([]);\n   // const modifiedData = [];\n     useEffect(async () => {\n         const response = await fetch(\"/api/regions\");\n         const data = await response.json();\n         console.log(data)\n         //console.log(data[3].path)\n         //state = data\n         setState(data);\n    \n    }, []);\n\n    return ( \n/*\n    <div>\n\n{state.map =  function myFunction(d) {\n return <h2>d.name</h2> \n} }\n    </div>  */\n        \n       /* \n        <div>\n            {state.map( d => <NodeComponent dataModel = {d} /> )}\n        </div>   */\n\n        <div>\n            {state.map(function(d) { \n                    d.path = d.path.split(\".\")\n              //  console.log(d.path) works \n              if (d.path.length === 1) { \n                newArray.push({name: el.name, children: []})\n              }\n                return <div><h1> {d.name} </h1> <div></div> </div> \n                \n                })}\n        </div> \n        \n    ) \n}\n\nexport default App; "]},"metadata":{},"sourceType":"module"}